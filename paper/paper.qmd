---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Jianing Li
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(scales) 
library(tidyr)

```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}
## Overview {#sec-data-overview}
Some of our data is of penguins (@fig-bills), from @palmerpenguins.

## Results {#sec-data-results}

```{r}
#| echo: false
#| warning: false
#| label: fig-total-population
#| fig-cap: "Trend of Homeless Population in Toronto from 2018 to 2024"

cleaned_shelter_data <- read.csv("/Users/liz/Downloads/starter_folder-main/data/analysis_data/shelter_analysis_data.csv")

# Ensure the date column is in the correct format (Month-Year format)
cleaned_shelter_data$Date <- as.Date(paste0("01-", cleaned_shelter_data$Date), format="%d-%b-%y")

# Filter to include only the "All Population" group
total_population_data <- subset(cleaned_shelter_data, Population_Group == "All Population")

# Load ggplot2 for plotting
ggplot(total_population_data, aes(x = Date, y = Homeless_Count)) +
  geom_line(color = "blue", linewidth = 1.5) +  # Adjust line color and width
  labs(x = "Date",
       y = "Homeless Population Count") +
  scale_x_date(date_labels = "%Y", date_breaks = "1 year") +  
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))    

```

@fig-total-population illustrates the fluctuation in Toronto's homeless population from 2018 to 2024. The chart shows cyclical rises and falls, with more pronounced declines around 2020 and 2021, followed by a steady recovery. The population reaches its highest point in 2024. Throughout this period, the homeless population varies between approximately 7,500 and 11,000 individuals.

```{r}
#| echo: false
#| warning: false
#| label: fig-age-distribution
#| fig-cap: "Age Group Distribution of Homeless Population in Toronto (2018-2024)"

# Summarize data for all years (total homeless population by age group)
total_data <- cleaned_shelter_data %>%
  summarise(Age_Under_16 = sum(Age_Under_16, na.rm = TRUE),
            Age_16_24 = sum(Age_16_24, na.rm = TRUE),
            Age_25_34 = sum(Age_25_34, na.rm = TRUE),
            Age_35_44 = sum(Age_35_44, na.rm = TRUE),
            Age_45_54 = sum(Age_45_54, na.rm = TRUE),
            Age_55_64 = sum(Age_55_64, na.rm = TRUE),
            Age_65_Over = sum(Age_65_Over, na.rm = TRUE))

# Reshape data for plotting
total_data_long <- tidyr::pivot_longer(total_data, 
                                       cols = starts_with("Age"), 
                                       names_to = "Age_Group", 
                                       values_to = "Count")

# Calculate percentages
total_count <- sum(total_data_long$Count)
total_data_long <- total_data_long %>%
  mutate(Percent = round(Count / total_count * 100))

# Create a pie chart with percentage labels
ggplot(total_data_long, aes(x = "", y = Count, fill = Age_Group)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  geom_text(aes(label = paste0(Percent, "%")), 
            position = position_stack(vjust = 0.5), size = 4) +
  theme_void() +
  theme(legend.position = "right") +
  scale_fill_brewer(palette = "Set3")  # Use a color palette for clarity


```
@fig-age-distribution shows the percentage of Toronto's homeless population in each age group as a proportion of the total homeless population from 2018 to 2024. The largest age group is 35-44 years old, accounting for about 21\% of the total population, followed by the 25-34 age group (approximately 18\%), the 45-54 age group (approximately 17\%), and the 55-64 age group (approximately 14\%). The under 16 and 16-24 age groups each account for 12\%. The smallest age group is 65 years and above, making up about 7\% of the total population. 

```{r}
#| echo: false
#| warning: false
#| label: fig-gender-distribution
#| fig-cap: "Homeless Population by Gender in Toronto (2018-2024)"
#| 
# Read the cleaned data
cleaned_shelter_data <- read.csv("/Users/liz/Downloads/starter_folder-main/data/analysis_data/shelter_analysis_data.csv")

# Ensure the date column is in the correct format
cleaned_shelter_data$date <- as.Date(paste0("01-", cleaned_shelter_data$Date), format="%d-%b-%y")
cleaned_shelter_data$year <- as.numeric(format(cleaned_shelter_data$date, "%Y"))  # Extract year as numeric

# Summarize data by year for different genders
gender_data <- cleaned_shelter_data %>%
  group_by(year) %>%
  summarise(Male = sum(Male_Count, na.rm = TRUE),
            Female = sum(Female_Count, na.rm = TRUE),
            Non_Binary = sum(Transgender_Non_Binary_Count, na.rm = TRUE))

# Calculate total population for each year and for overall gender proportions
total_population <- gender_data %>%
  summarise(Male = sum(Male), Female = sum(Female), Non_Binary = sum(Non_Binary))

# Calculate percentages for each gender over the entire period
total_population_long <- pivot_longer(total_population, 
                                      cols = c("Non_Binary", "Female", "Male"), 
                                      names_to = "Gender", 
                                      values_to = "Total_Count")

# Calculate proportions
total_population_long <- total_population_long %>%
  mutate(Percent = round(Total_Count / sum(Total_Count) * 100, 1))

# Create a string for the percentages to use in the legend
gender_percentages <- paste0(total_population_long$Gender, " (", total_population_long$Percent, "%)")

# Reshape data for plotting
gender_data_long <- pivot_longer(gender_data, 
                                 cols = c("Male", "Female", "Non_Binary"), 
                                 names_to = "Gender", 
                                 values_to = "Count")


gender_data_long$Gender <- factor(gender_data_long$Gender, levels = c("Non_Binary", "Female", "Male"))

# Plot area chart with percentages in the legend
ggplot(gender_data_long, aes(x = year, y = Count, fill = Gender)) +
  geom_area(position = "stack") +
  labs(x = "Year", y = "Homeless Population Count", fill = "Gender") +
  scale_fill_manual(values = c("Male" = "blue", "Female" = "pink", "Non_Binary" = "purple"),
                    labels = gender_percentages) +  # Add percentages to the legend
  theme_minimal()


```

@fig-gender-distribution presents the gender distribution of Toronto's homeless population from 2018 to 2024. During this period, males have consistently made up the largest proportion, accounting for approximately 61.8% of the total homeless population. Females make up about 36.8%, while non-binary individuals make up about 1.4%. Over time, the total homeless population of each gender has shown similar trends, meaning that the proportion of each gender has remained almost constant.

```{r}
#| echo: false
#| warning: false
#| label: fig-chronic-population
#| fig-cap: "Changes in Chronic and Non-Chronic Homeless Population and Proportion in Toronto (2018-2024)"

# Summarize data by year for Chronic and All Population
chronic_data <- cleaned_shelter_data %>%
  filter(Population_Group == 'Chronic') %>%
  group_by(year) %>%
  summarize(homeless_count = sum(Homeless_Count))

all_population_data <- cleaned_shelter_data %>%
  filter(Population_Group == 'All Population') %>%
  group_by(year) %>%
  summarize(homeless_count = sum(Homeless_Count))

# Create Non-Chronic by subtracting Chronic from All Population
non_chronic_data <- all_population_data
non_chronic_data$homeless_count <- non_chronic_data$homeless_count - chronic_data$homeless_count
non_chronic_data$group <- 'Non-Chronic'

# Add Chronic to the dataset
chronic_data$group <- 'Chronic'
combined_data <- rbind(chronic_data, non_chronic_data)  # Combine data

# Ensure 'group' is a factor and order it so that Chronic appears at the top
combined_data$group <- factor(combined_data$group, levels = c("Non-Chronic", "Chronic"))

# Calculate the proportion of Chronic for each year
proportions <- chronic_data %>%
  left_join(all_population_data, by = "year", suffix = c("_chronic", "_all")) %>%
  mutate(percentage = round((homeless_count_chronic / homeless_count_all) * 100, 1))

# Plot the stacked bar chart with Chronic at the top and add percentages
ggplot(combined_data, aes(x = year, y = homeless_count, fill = group)) +
  geom_bar(stat = "identity", position = "stack") +
  geom_text(data = proportions, aes(x = year, y = homeless_count_chronic, label = paste0(percentage, "%")),
            vjust = 1.5, color = "white", size = 4) +  # Add percentage labels in white color
  labs(x = "Year", y = "Homeless Population Count", fill = "Group") +
  theme_minimal() +
  scale_fill_manual(values = c("Chronic" = "blue", "Non-Chronic" = "orange"))



```

The @chronic-population displays the changes in the number and proportion of chronic and non-chronic homeless people in Toronto between 2018 and 2024. The number of chronically homeless has been growing over this time, with over 30,000 people in 2018, and by 2023, the number has gone to about 60,000, nearly doubling. the slight drop in numbers in 2024 is due to the fact that the statistics were last updated on September 17, 2024, and it is projected that by the end of the year, the number will have exceeded the 2023 one. Similarly, the percentage of chronically homeless is growing every year, from 29.7% in 2019 to 63.7% in 2024. Note that in 2019 to 2020 and 2023 to 2024, the rate grows faster, by about 10 percent.


# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check




# References


