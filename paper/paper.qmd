---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(scales) 
library(tidyr)

```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-bills
#| fig-cap: Bills of penguins
#| echo: false

cleaned_shelter_data <- read.csv("/Users/liz/Downloads/starter_folder-main/data/analysis_data/shelter_analysis_data.csv")

# Ensure the date column is in the correct format (Month-Year format)
cleaned_shelter_data$Date <- as.Date(paste0("01-", cleaned_shelter_data$Date), format="%d-%b-%y")

# Filter to include only the "All Population" group
total_population_data <- subset(cleaned_shelter_data, Population_Group == "All Population")

# Load ggplot2 for plotting
ggplot(total_population_data, aes(x = Date, y = Homeless_Count)) +
  geom_line(color = "blue", linewidth = 1.5) +  # Adjust line color and width
  labs(title = "Total Homeless Population Over Time",
       x = "Date",
       y = "Homeless Population Count") +
  scale_x_date(date_labels = "%Y", date_breaks = "1 year") +  # Show year on x-axis with 1-year intervals
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))    

```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}

# Summarize data for all years (total homeless population by age group)
total_data <- cleaned_shelter_data %>%
  summarise(Age_Under_16 = sum(Age_Under_16, na.rm = TRUE),
            Age_16_24 = sum(Age_16_24, na.rm = TRUE),
            Age_25_34 = sum(Age_25_34, na.rm = TRUE),
            Age_35_44 = sum(Age_35_44, na.rm = TRUE),
            Age_45_54 = sum(Age_45_54, na.rm = TRUE),
            Age_55_64 = sum(Age_55_64, na.rm = TRUE),
            Age_65_Over = sum(Age_65_Over, na.rm = TRUE))

# Reshape data for plotting
total_data_long <- tidyr::pivot_longer(total_data, 
                                       cols = starts_with("Age"), 
                                       names_to = "Age_Group", 
                                       values_to = "Count")

# Calculate percentages
total_count <- sum(total_data_long$Count)
total_data_long <- total_data_long %>%
  mutate(Percent = round(Count / total_count * 100))

# Create a pie chart with percentage labels
ggplot(total_data_long, aes(x = "", y = Count, fill = Age_Group)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  geom_text(aes(label = paste0(Percent, "%")), 
            position = position_stack(vjust = 0.5), size = 4) +
  labs(title = "Age Group Distribution of Total Homeless Population") +
  theme_void() +
  theme(legend.position = "right") +
  scale_fill_brewer(palette = "Set3")  # Use a color palette for clarity


```

```{r}

# Read the cleaned data
cleaned_shelter_data <- read.csv("/Users/liz/Downloads/starter_folder-main/data/analysis_data/shelter_analysis_data.csv")

# Ensure the date column is in the correct format
cleaned_shelter_data$date <- as.Date(paste0("01-", cleaned_shelter_data$Date), format="%d-%b-%y")
cleaned_shelter_data$year <- format(cleaned_shelter_data$date, "%Y")  # Extract year as a string

# Summarize data by year for different age groups
age_data <- cleaned_shelter_data %>%
  group_by(year) %>%
  summarise(Age_Under_16 = sum(Age_Under_16, na.rm = TRUE),
            Age_16_24 = sum(Age_16_24, na.rm = TRUE),
            Age_25_34 = sum(Age_25_34, na.rm = TRUE),
            Age_35_44 = sum(Age_35_44, na.rm = TRUE),
            Age_45_54 = sum(Age_45_54, na.rm = TRUE),
            Age_55_64 = sum(Age_55_64, na.rm = TRUE),
            Age_65_Over = sum(Age_65_Over, na.rm = TRUE))

# Reshape data for plotting
age_data_long <- pivot_longer(age_data, 
                              cols = starts_with("Age"), 
                              names_to = "Age_Group", 
                              values_to = "Count")

# Plot 100% stacked bar chart
ggplot(age_data_long, aes(x = year, y = Count, fill = Age_Group)) +
  geom_bar(stat = "identity", position = "fill") +  # Use 'fill' to normalize to 100%
  scale_y_continuous(labels = percent) +  # Display percentages on y-axis
  labs(title = "Age Group Proportion Over Time", 
       x = "Year", y = "Proportion", fill = "Age Group") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set3")  # Use color palette for clarity

```

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false


# Read the cleaned data
cleaned_shelter_data <- read.csv("/Users/liz/Downloads/starter_folder-main/data/analysis_data/shelter_analysis_data.csv")

# Ensure the date column is in the correct format
cleaned_shelter_data$date <- as.Date(paste0("01-", cleaned_shelter_data$Date), format="%d-%b-%y")
cleaned_shelter_data$year <- as.numeric(format(cleaned_shelter_data$date, "%Y"))  # Extract year as numeric

# Summarize data by year for different genders
gender_data <- cleaned_shelter_data %>%
  group_by(year) %>%
  summarise(Male = sum(Male_Count, na.rm = TRUE),
            Female = sum(Female_Count, na.rm = TRUE),
            Non_Binary = sum(Transgender_Non_Binary_Count, na.rm = TRUE))

# Calculate total population for each year and for overall gender proportions
total_population <- gender_data %>%
  summarise(Male = sum(Male), Female = sum(Female), Non_Binary = sum(Non_Binary))

# Calculate percentages for each gender over the entire period
total_population_long <- pivot_longer(total_population, 
                                      cols = c("Male", "Female", "Non_Binary"), 
                                      names_to = "Gender", 
                                      values_to = "Total_Count")

# Calculate proportions
total_population_long <- total_population_long %>%
  mutate(Percent = round(Total_Count / sum(Total_Count) * 100, 1))

# Create a string for the percentages to use in the legend
gender_percentages <- paste0(total_population_long$Gender, " (", total_population_long$Percent, "%)")

# Reshape data for plotting
gender_data_long <- pivot_longer(gender_data, 
                                 cols = c("Male", "Female", "Non_Binary"), 
                                 names_to = "Gender", 
                                 values_to = "Count")

# Ensure gender order: Non-Binary at the bottom, Female in the middle, Male at the top
gender_data_long$Gender <- factor(gender_data_long$Gender, levels = c("Non_Binary", "Female", "Male"))

# Plot area chart with percentages in the legend
ggplot(gender_data_long, aes(x = year, y = Count, fill = Gender)) +
  geom_area(position = "stack") +
  labs(title = "Homeless Population by Gender Over Time (Area Chart)", 
       x = "Year", y = "Homeless Population Count", fill = "Gender") +
  scale_fill_manual(values = c("Male" = "blue", "Female" = "pink", "Non_Binary" = "purple"),
                    labels = gender_percentages) +  # Add percentages to the legend
  theme_minimal()


```

Talk way more about it. 
```{r}


# Summarize data by year for Chronic and All Population
chronic_data <- cleaned_shelter_data %>%
  filter(Population_Group == 'Chronic') %>%
  group_by(year) %>%
  summarize(homeless_count = sum(Homeless_Count))

all_population_data <- cleaned_shelter_data %>%
  filter(Population_Group == 'All Population') %>%
  group_by(year) %>%
  summarize(homeless_count = sum(Homeless_Count))

# Create Non-Chronic by subtracting Chronic from All Population
non_chronic_data <- all_population_data
non_chronic_data$homeless_count <- non_chronic_data$homeless_count - chronic_data$homeless_count
non_chronic_data$group <- 'Non-Chronic'

# Add Chronic to the dataset
chronic_data$group <- 'Chronic'
combined_data <- rbind(chronic_data, non_chronic_data)  # Combine data

# Ensure 'group' is a factor and order it so that Chronic appears at the top
combined_data$group <- factor(combined_data$group, levels = c("Non-Chronic", "Chronic"))

# Reorder the data frame so that 'Non-Chronic' is plotted first (to appear at the bottom)
combined_data <- combined_data %>%
  arrange(group)

# Plot the stacked bar chart with Chronic at the top
ggplot(combined_data, aes(x = year, y = homeless_count, fill = group)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "Chronic vs Non-Chronic Homeless Population by Year", 
       x = "Year", y = "Homeless Population Count", fill = "Group") +
  theme_minimal() +
  scale_fill_manual(values = c("Chronic" = "blue", "Non-Chronic" = "orange"))  # Adjust colors if needed


```






### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


